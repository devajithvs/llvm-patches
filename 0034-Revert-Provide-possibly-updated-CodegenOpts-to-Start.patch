From 983e71fec4578a646f2800fd21703df3af9f843d Mon Sep 17 00:00:00 2001
From: Devajith Valaparambil Sreeramaswamy
 <devajith.valaparambil.sreeramaswamy@cern.ch>
Date: Thu, 31 Oct 2024 09:32:19 +0100
Subject: [PATCH 34/51] Revert "Provide (possibly updated) CodegenOpts to
 StartModule."

This reverts commit 68aa5b64243ded010a14e919e6a8471c8002cd08.
---
 .../clang/include/clang/CodeGen/ModuleBuilder.h   |  4 ----
 .../clang/lib/CodeGen/ModuleBuilder.cpp           | 15 +--------------
 2 files changed, 1 insertion(+), 18 deletions(-)

diff --git a/interpreter/llvm-project/clang/include/clang/CodeGen/ModuleBuilder.h b/interpreter/llvm-project/clang/include/clang/CodeGen/ModuleBuilder.h
index b6c8a14bbf..5dc69baa47 100644
--- a/interpreter/llvm-project/clang/include/clang/CodeGen/ModuleBuilder.h
+++ b/interpreter/llvm-project/clang/include/clang/CodeGen/ModuleBuilder.h
@@ -101,10 +101,6 @@ public:
   /// enable codegen in interactive processing environments.
   llvm::Module* StartModule(llvm::StringRef ModuleName, llvm::LLVMContext &C);
 
-  llvm::Module* StartModule(llvm::StringRef ModuleName,
-                            llvm::LLVMContext& C,
-                            const CodeGenOptions& CGO);
-
   void forgetGlobal(llvm::GlobalValue* GV);
 };
 
diff --git a/interpreter/llvm-project/clang/lib/CodeGen/ModuleBuilder.cpp b/interpreter/llvm-project/clang/lib/CodeGen/ModuleBuilder.cpp
index 8ad774295f..bb0eb29b50 100644
--- a/interpreter/llvm-project/clang/lib/CodeGen/ModuleBuilder.cpp
+++ b/interpreter/llvm-project/clang/lib/CodeGen/ModuleBuilder.cpp
@@ -36,7 +36,7 @@ namespace clang {
     IntrusiveRefCntPtr<llvm::vfs::FileSystem> FS; // Only used for debug info.
     const HeaderSearchOptions &HeaderSearchOpts; // Only used for debug info.
     const PreprocessorOptions &PreprocessorOpts; // Only used for debug info.
-    CodeGenOptions CodeGenOpts;  // Intentionally copied in.
+    const CodeGenOptions &CodeGenOpts;
 
     unsigned HandlingTopLevelDecls;
 
@@ -261,13 +261,6 @@ namespace clang {
       return M.get();
     }
 
-    llvm::Module *StartModule(llvm::StringRef ModuleName,
-                              llvm::LLVMContext& C,
-                              const CodeGenOptions& CGO) {
-      CodeGenOpts = CGO;
-      return StartModule(ModuleName, C);
-    }
-
     void forgetGlobal(llvm::GlobalValue* GV) {
       for (auto I = Builder->ConstantStringMap.begin(),
             E = Builder->ConstantStringMap.end(); I != E; ++I) {
@@ -494,12 +487,6 @@ llvm::Module *CodeGenerator::StartModule(llvm::StringRef ModuleName,
   return static_cast<CodeGeneratorImpl*>(this)->StartModule(ModuleName, C);
 }
 
-llvm::Module *CodeGenerator::StartModule(llvm::StringRef ModuleName,
-                                         llvm::LLVMContext& C,
-                                         const CodeGenOptions& CGO) {
-  return static_cast<CodeGeneratorImpl*>(this)->StartModule(ModuleName, C, CGO);
-}
-
 void CodeGenerator::forgetGlobal(llvm::GlobalValue* GV) {
   static_cast<CodeGeneratorImpl*>(this)->forgetGlobal(GV);
 }
-- 
2.43.5

