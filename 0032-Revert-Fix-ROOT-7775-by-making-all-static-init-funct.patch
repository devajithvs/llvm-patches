From 87bc2eb7f7bcae7db12cc61bfcfe37d20fa8bcb1 Mon Sep 17 00:00:00 2001
From: Devajith Valaparambil Sreeramaswamy
 <devajith.valaparambil.sreeramaswamy@cern.ch>
Date: Thu, 31 Oct 2024 09:32:19 +0100
Subject: [PATCH 32/51] Revert "Fix ROOT-7775 by making all static init
 function name unique."

This reverts commit 96cc9560e8f2a17e1fa832d0520f8e258a5d8c19.
---
 .../llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp     | 12 +-----------
 1 file changed, 1 insertion(+), 11 deletions(-)

diff --git a/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp b/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp
index 3799cc10aa..e08a1e5f42 100644
--- a/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp
+++ b/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp
@@ -540,19 +540,9 @@ CodeGenModule::EmitCXXGlobalVarDeclInitFunc(const VarDecl *D,
     getCXXABI().getMangleContext().mangleDynamicInitializer(D, Out);
   }
 
-  // Use the module name to make the initializer unique accross modules.
-  SmallString<128> moduleName(TheModule.getName());
-  for (size_t i = 0; i < moduleName.size(); ++i) {
-    // Replace everything that's not [a-zA-Z0-9._] with a _. This set happens
-    // to be the set of C preprocessing numbers.
-    if (!isPreprocessingNumberBody(moduleName[i]))
-      moduleName[i] = '_';
-  }
-
   // Create a variable initialization function.
   llvm::Function *Fn = CreateGlobalInitOrCleanUpFunction(
-      FTy, llvm::Twine(FnName)+moduleName.str() + "_",
-      getTypes().arrangeNullaryFunction(), D->getLocation());
+      FTy, FnName.str(), getTypes().arrangeNullaryFunction(), D->getLocation());
 
   auto *ISA = D->getAttr<InitSegAttr>();
   CodeGenFunction(*this).GenerateCXXGlobalVarDeclInitFunc(Fn, D, Addr,
-- 
2.43.5

