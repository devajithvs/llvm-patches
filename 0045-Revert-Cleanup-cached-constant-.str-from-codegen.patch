From 18359bfd3a2d2ade4233aeed04b43a06cbc8c60c Mon Sep 17 00:00:00 2001
From: Devajith Valaparambil Sreeramaswamy
 <devajith.valaparambil.sreeramaswamy@cern.ch>
Date: Thu, 31 Oct 2024 09:32:20 +0100
Subject: [PATCH 45/51] Revert "Cleanup cached constant (.str) from codegen."

This reverts commit 77ba0723eee76cd8bc0c87008344ee5dfe12080d.
---
 .../clang/include/clang/CodeGen/ModuleBuilder.h    |  3 ---
 .../clang/lib/CodeGen/ModuleBuilder.cpp            | 14 --------------
 2 files changed, 17 deletions(-)

diff --git a/interpreter/llvm-project/clang/include/clang/CodeGen/ModuleBuilder.h b/interpreter/llvm-project/clang/include/clang/CodeGen/ModuleBuilder.h
index 5dc69baa47..d332a063ed 100644
--- a/interpreter/llvm-project/clang/include/clang/CodeGen/ModuleBuilder.h
+++ b/interpreter/llvm-project/clang/include/clang/CodeGen/ModuleBuilder.h
@@ -18,7 +18,6 @@
 
 namespace llvm {
   class Constant;
-  class GlobalValue;
   class LLVMContext;
   class Module;
   class StringRef;
@@ -100,8 +99,6 @@ public:
   /// Create a new \c llvm::Module after calling HandleTranslationUnit. This
   /// enable codegen in interactive processing environments.
   llvm::Module* StartModule(llvm::StringRef ModuleName, llvm::LLVMContext &C);
-
-  void forgetGlobal(llvm::GlobalValue* GV);
 };
 
 /// CreateLLVMCodeGen - Create a CodeGenerator instance.
diff --git a/interpreter/llvm-project/clang/lib/CodeGen/ModuleBuilder.cpp b/interpreter/llvm-project/clang/lib/CodeGen/ModuleBuilder.cpp
index bb0eb29b50..bff90fd2b2 100644
--- a/interpreter/llvm-project/clang/lib/CodeGen/ModuleBuilder.cpp
+++ b/interpreter/llvm-project/clang/lib/CodeGen/ModuleBuilder.cpp
@@ -261,16 +261,6 @@ namespace clang {
       return M.get();
     }
 
-    void forgetGlobal(llvm::GlobalValue* GV) {
-      for (auto I = Builder->ConstantStringMap.begin(),
-            E = Builder->ConstantStringMap.end(); I != E; ++I) {
-        if (I->second == GV) {
-          Builder->ConstantStringMap.erase(I);
-          break;
-        }
-      }
-    }
-
     void Initialize(ASTContext &Context) override {
       Ctx = &Context;
 
@@ -487,10 +477,6 @@ llvm::Module *CodeGenerator::StartModule(llvm::StringRef ModuleName,
   return static_cast<CodeGeneratorImpl*>(this)->StartModule(ModuleName, C);
 }
 
-void CodeGenerator::forgetGlobal(llvm::GlobalValue* GV) {
-  static_cast<CodeGeneratorImpl*>(this)->forgetGlobal(GV);
-}
-
 CodeGenerator *
 clang::CreateLLVMCodeGen(DiagnosticsEngine &Diags, llvm::StringRef ModuleName,
                          IntrusiveRefCntPtr<llvm::vfs::FileSystem> FS,
-- 
2.43.5

